{"version":3,"sources":["agent.js","middleware.js","constants/actionTypes.js","reducers/common.js","reducer.js","store.js","components/Home/index.js","components/App.js","index.js"],"names":["global","superagent_promise__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","superagent_promise__WEBPACK_IMPORTED_MODULE_0___default","n","superagent__WEBPACK_IMPORTED_MODULE_1__","superagent__WEBPACK_IMPORTED_MODULE_1___default","superagent","superagentPromise","_superagent","Promise","responseBody","res","body","requests","url","get","concat","then","Home","all","__webpack_exports__","promiseMiddleware","store","next","action","v","payload","NProgress","start","dispatch","type","subtype","currentView","getState","viewChangeCounter","skipTracking","currentState","console","log","promise","done","error","response","defaultState","appName","appLoaded","combineReducers","common","state","arguments","length","undefined","Object","objectSpread","data","activePage","value","router","routerReducer","history","createHistory","myRouterMiddleware","routerMiddleware","createStore","reducer","applyMiddleware","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePageChange","bind","assertThisInitialized","pageNumber","onPageChange","columns","Header","d","react_default","a","createElement","accessor","filterable","sortable","minWidth","id","rel","href","movie_imdb_link","target","moviesLength","dataToDisplay","slice","className","react_table_es","defaultPageSize","showPagination","Pagination_default","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","React","Component","connect","App","onLoad","agent","components_Home","advertiser","timeline","ReactDOM","render","lib","react_router_redux_es","Switch","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.c27b68b9.chunk.js","sourcesContent":["import superagentPromise from \"superagent-promise\";\nimport _superagent from \"superagent\";\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\n// API to fetch data.\nconst API_ROOT = \"http://starlord.hackerearth.com/movies\";\n\nconst responseBody = res => res.body;\n\nconst requests = {\n\tget: url => superagent.get(`${API_ROOT}${url}`).then(responseBody)\n};\n\nconst Home = {\n\tall: () => requests.get(\"\")\n};\n\nexport default {\n\tHome\n};\n","import NProgress from \"nprogress\";\nimport { ASYNC_START, ASYNC_END } from \"./constants/actionTypes\";\n\nconst promiseMiddleware = store => next => action => {\n    if (isPromise(action.payload)) {\n        NProgress.start();\n        store.dispatch({ type: ASYNC_START, subtype: action.type });\n\n        const currentView = store.getState().viewChangeCounter;\n        const skipTracking = action.skipTracking;\n\n        action.payload.then(\n            res => {\n                const currentState = store.getState();\n                if (\n                    !skipTracking &&\n                    currentState.viewChangeCounter !== currentView\n                ) {\n                    return;\n                }\n                console.log(\"RESULT\", res);\n                action.payload = res;\n                store.dispatch({ type: ASYNC_END, promise: action.payload });\n                store.dispatch(action);\n                NProgress.done();\n            },\n            error => {\n                const currentState = store.getState();\n                if (\n                    !skipTracking &&\n                    currentState.viewChangeCounter !== currentView\n                ) {\n                    return;\n                }\n                console.log(\"ERROR\", error);\n                action.error = true;\n                action.payload = error.response.body;\n                if (!action.skipTracking) {\n                    store.dispatch({\n                        type: ASYNC_END,\n                        promise: action.payload\n                    });\n                }\n                store.dispatch(action);\n                NProgress.done();\n            }\n        );\n\n        return;\n    }\n\n    next(action);\n};\n\nfunction isPromise(v) {\n    return v && typeof v.then === \"function\";\n}\n\nexport { promiseMiddleware };\n","/**\n * Constants to handle Redux Store at one place.\n */\n\nexport const APP_LOAD = \"APP_LOAD\";\n\nexport const ASYNC_START = \"ASYNC_START\";\nexport const ASYNC_END = \"ASYNC_END\"; \n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\n","import {\n    APP_LOAD,\n    CHANGE_PAGE\n} from \"../constants/actionTypes\";\n\nconst defaultState = {\n    appName: \"Sweeten\",\n    appLoaded: false\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case APP_LOAD:\n            return {\n                ...state,\n                data: action.payload,\n                activePage: 1,\n                appLoaded: true\n            };\n        case CHANGE_PAGE:\n            return {\n                ...state,\n                activePage: action.value\n            };\n        default:\n            return state;\n    }\n};\n","import common from \"./reducers/common\";\nimport { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\n\nexport default combineReducers({\n\tcommon,\n\trouter: routerReducer\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { promiseMiddleware } from \"./middleware\";\nimport reducer from \"./reducer\";\n\nimport { routerMiddleware } from \"react-router-redux\";\nimport createHistory from \"history/createBrowserHistory\";\n\nexport const history = createHistory();\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history);\n\nconst getMiddleware = () => {\n\tif (process.env.NODE_ENV === \"production\") {\n\t\treturn applyMiddleware(myRouterMiddleware, promiseMiddleware);\n\t} else {\n\t\t// Enable additional logging in non-production environments.\n\t\treturn applyMiddleware(\n\t\t\tmyRouterMiddleware,\n\t\t\tpromiseMiddleware,\n\t\t\tcreateLogger()\n\t\t);\n\t}\n};\n\nexport const store = createStore(reducer, getMiddleware());\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Pagination from \"react-js-pagination\";\nimport { CHANGE_PAGE } from \"../../constants/actionTypes\";\nimport ReactTable from \"react-table\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-table/react-table.css\";\n\nconst mapStateToProps = state => ({\n    ...state.common\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onPageChange: value => dispatch({ type: CHANGE_PAGE, value })\n});\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePageChange = this.handlePageChange.bind(this);\n    }\n\n    handlePageChange(pageNumber) {\n        this.props.onPageChange(pageNumber);\n    }\n\n    render() {\n        if (this.props.data) {\n\n            const columns = [{\n                Header: d => <b>Movie Title</b>,\n                accessor: 'movie_title',\n                filterable: false,\n                sortable: false,\n                minWidth: 300\n              }, {\n                Header: 'Director Name',\n                accessor: 'director_name',\n                filterable: false,\n                sortable: false,\n                minWidth: 180\n              }, {\n                Header: 'Actor I',\n                accessor: 'actor_1_name',\n                filterable: false,\n                sortable: false,\n                minWidth: 180\n              }, {\n                Header: 'Actor II',\n                accessor: 'actor_2_name',\n                filterable: false,\n                sortable: false,\n                minWidth: 180\n              }, {\n                Header: 'Genres',\n                accessor: 'genres',\n                minWidth: 200\n              }, {\n                Header: 'Language',\n                accessor: 'language'\n              }, {\n                Header: 'Country',\n                accessor: 'country'\n              }, {\n                Header: 'Content Rating',\n                accessor: 'content_rating',\n                filterable: false,\n                sortable: false\n              }, {\n                Header: 'Budget',\n                accessor: 'budget',\n                minWidth: 130\n              }, {\n                Header: 'Title Year',\n                accessor: 'title_year'\n              }, {\n                Header: 'Plot Keywords',\n                accessor: 'plot_keywords',\n                filterable: false,\n                sortable: false,\n                minWidth: 200\n              }, {\n                id: 'movieIMDBLink', // Required because our accessor is not a string\n                Header: 'Movie IMDB Link',\n                accessor: d => <a rel=\"noopener noreferrer\" href={d.movie_imdb_link} target=\"_blank\">{d.movie_imdb_link}</a>,\n                filterable: false,\n                sortable: false,\n                minWidth: 200\n              }];\n\n            const data = this.props.data;\n            const moviesLength = data.length;\n            const page = this.props.activePage - 1;\n            let value = page * 10;\n            let dataToDisplay = data.slice(value, value + 10);\n\n            return (\n                <section>\n                    <div className=\"container\">\n                        <div className=\"feed-boxes\">\n                            <h3 className=\"subtitle title\">Movies - Sweeten</h3>\n                        </div>\n                        <ReactTable \n                            data={dataToDisplay} \n                            columns={columns}\n                            defaultPageSize={10}\n                            filterable={true}\n                            className=\"-striped -highlight react-t\"\n                            showPagination={false}\n                        />\n                        <Pagination\n                          activePage={this.props.activePage}\n                          itemsCountPerPage={10}\n                          totalItemsCount={moviesLength}\n                          pageRangeDisplayed={5}\n                          onChange={this.handlePageChange}\n                        />\n                        <h5>Notes</h5>\n                        <p>* Click on the Column Header (Title) to SORT.</p>\n                        <p>* Search and Sort using <b>Genres, Language, Country, Budget & Title Year.</b></p>\n                    </div>\n                </section>\n            );\n        } else {\n            return <div />;\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);","import React from \"react\";\nimport agent from \"../agent\";\nimport { connect } from \"react-redux\";\nimport { APP_LOAD } from \"../constants/actionTypes\";\nimport Home from \"../components/Home\";\n\nimport \"../styles/variables.css\";\nimport \"../styles/styles.css\";\nimport \"../styles/responsive.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst mapStateToProps = state => {\n    return {\n        appLoaded: state.common.appLoaded,\n        appName: state.common.appName,\n        data: state.common.data,\n        advertiser: state.common.advertiser,\n        timeline: state.common.timeline\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onLoad: payload => dispatch({ type: APP_LOAD, payload, skipTracking: true })\n});\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.onLoad(agent.Home.all());\n    }\n\n    render() {\n        return <Home />;\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport { store, history } from \"./store\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from \"react-router-redux\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ConnectedRouter history={history}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" component={App} />\n\t\t\t</Switch>\n\t\t</ConnectedRouter>\n\t</Provider>,\n\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}